<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on MM&#39;s Blog</title>
    <link>/categories/programming/</link>
    <description>Recent content in Programming on MM&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shapefiles in R with ggplot2 &amp; rgdal</title>
      <link>/2018/09/04/shapefiles-in-r-with-ggplot2-rgdal/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/04/shapefiles-in-r-with-ggplot2-rgdal/</guid>
      <description>This quick tutorial will show you the very basics of using Shapefiles in R to generate maps with ggplot2 and rgdal. Along the way, we will create a Hospital Density Map for Scotland as the one below: Before We Start Geospatial data files aren’t necessarily free, in fact, a lot of service providers charge a handsome amount of money for them (after all, the generation of these files takes time, effort and money).</description>
    </item>
    
    <item>
      <title>Maze Generator à la Shiffman</title>
      <link>/2018/08/27/maze-generator-%C3%A0-la-shiffman/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/27/maze-generator-%C3%A0-la-shiffman/</guid>
      <description>I am a big fan of Daniel Shiffman’s work and particularly like his YouTube channel Coding Challenges.
One of the “challenges” is the creation of a Maze Generator using p5.js, the JavaScript implementation of the Processing language/package.
In this short article you can find my implementation of the Maze Generator à la Shiffman. Run the Maze Generator below or head down to view the code.
Maze Generator  Hosted on OpenProcessing.</description>
    </item>
    
  </channel>
</rss>